<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.39.0" timestamp="2024-02-28T18:03:53.545">
<file name="C:\Users\Aleksey\Desktop\smirnova\src\main\java\CPUPlayer.java">
<violation beginline="8" endline="27" begincolumn="1" endcolumn="1" rule="NoPackage" ruleset="Code Style" class="CPUPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#nopackage" priority="3">
All classes, interfaces, enums and annotations must belong to a named package
</violation>
<violation beginline="14" endline="16" begincolumn="12" endcolumn="5" rule="CallSuperInConstructor" ruleset="Code Style" class="CPUPlayer" method="CPUPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="22" endline="26" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" class="CPUPlayer" method="chooseMove" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'chooseMove()' is missing an @Override annotation.
</violation>
<violation beginline="24" endline="24" begincolumn="13" endcolumn="21" rule="LocalVariableNamingConventions" ruleset="Code Style" class="CPUPlayer" method="chooseMove" variable="CPUAttack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#localvariablenamingconventions" priority="1">
The local variable name 'CPUAttack' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="25" endline="25" begincolumn="9" endcolumn="25" rule="UnnecessaryLocalBeforeReturn" ruleset="Code Style" class="CPUPlayer" method="chooseMove" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#unnecessarylocalbeforereturn" priority="3">
Consider simply returning the value vs storing it in local variable 'CPUAttack'
</violation>
</file>
<file name="C:\Users\Aleksey\Desktop\smirnova\src\main\java\GameDriver.java">
<violation beginline="1" endline="59" begincolumn="1" endcolumn="1" rule="NoPackage" ruleset="Code Style" class="GameDriver" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#nopackage" priority="3">
All classes, interfaces, enums and annotations must belong to a named package
</violation>
<violation beginline="20" endline="20" begincolumn="17" endcolumn="33" rule="UselessParentheses" ruleset="Code Style" class="GameDriver" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="20" endline="20" begincolumn="40" endcolumn="55" rule="UselessParentheses" ruleset="Code Style" class="GameDriver" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="23" endline="23" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" class="GameDriver" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="24" endline="24" begincolumn="13" endcolumn="29" rule="SystemPrintln" ruleset="Best Practices" class="GameDriver" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.printf is used
</violation>
<violation beginline="27" endline="27" begincolumn="13" endcolumn="29" rule="SystemPrintln" ruleset="Best Practices" class="GameDriver" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.printf is used
</violation>
<violation beginline="51" endline="51" begincolumn="13" endcolumn="29" rule="SystemPrintln" ruleset="Best Practices" class="GameDriver" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.printf is used
</violation>
<violation beginline="55" endline="55" begincolumn="13" endcolumn="29" rule="SystemPrintln" ruleset="Best Practices" class="GameDriver" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.printf is used
</violation>
</file>
<file name="C:\Users\Aleksey\Desktop\smirnova\src\main\java\HumanPlayer.java">
<violation beginline="9" endline="34" begincolumn="1" endcolumn="1" rule="NoPackage" ruleset="Code Style" class="HumanPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#nopackage" priority="3">
All classes, interfaces, enums and annotations must belong to a named package
</violation>
<violation beginline="15" endline="17" begincolumn="12" endcolumn="5" rule="CallSuperInConstructor" ruleset="Code Style" class="HumanPlayer" method="HumanPlayer" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#callsuperinconstructor" priority="3">
It is a good practice to call super() in a constructor
</violation>
<violation beginline="23" endline="33" begincolumn="12" endcolumn="5" rule="MissingOverride" ruleset="Best Practices" class="HumanPlayer" method="chooseMove" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'chooseMove()' is missing an @Override annotation.
</violation>
<violation beginline="26" endline="26" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" class="HumanPlayer" method="chooseMove" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="29" endline="29" begincolumn="21" endcolumn="25" rule="CloseResource" ruleset="Error Prone" class="HumanPlayer" method="chooseMove" variable="myObj" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this InputStream object are closed after use
</violation>
</file>
<file name="C:\Users\Aleksey\Desktop\smirnova\src\main\java\Monster.java">
<violation beginline="8" endline="118" begincolumn="1" endcolumn="1" rule="NoPackage" ruleset="Code Style" class="Monster" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#nopackage" priority="3">
All classes, interfaces, enums and annotations must belong to a named package
</violation>
<violation beginline="11" endline="11" begincolumn="16" endcolumn="17" rule="ShortVariable" ruleset="Code Style" class="Monster" variable="hp" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like hp
</violation>
<violation beginline="38" endline="38" begincolumn="50" endcolumn="51" rule="ShortVariable" ruleset="Code Style" class="Monster" method="Monster" variable="hp" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like hp
</violation>
<violation beginline="38" endline="38" begincolumn="95" endcolumn="96" rule="ShortVariable" ruleset="Code Style" class="Monster" method="Monster" variable="m1" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like m1
</violation>
<violation beginline="38" endline="38" begincolumn="104" endcolumn="105" rule="ShortVariable" ruleset="Code Style" class="Monster" method="Monster" variable="m2" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like m2
</violation>
<violation beginline="38" endline="38" begincolumn="113" endcolumn="114" rule="ShortVariable" ruleset="Code Style" class="Monster" method="Monster" variable="m3" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like m3
</violation>
<violation beginline="38" endline="38" begincolumn="122" endcolumn="123" rule="ShortVariable" ruleset="Code Style" class="Monster" method="Monster" variable="m4" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like m4
</violation>
<violation beginline="57" endline="57" begincolumn="29" endcolumn="29" rule="ShortVariable" ruleset="Code Style" class="Monster" method="getMove" variable="n" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like n
</violation>
<violation beginline="58" endline="58" begincolumn="18" endcolumn="18" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Monster" method="getMove" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="61" endline="61" begincolumn="22" endcolumn="22" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Monster" method="getMove" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="64" endline="64" begincolumn="22" endcolumn="22" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Monster" method="getMove" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="82" endline="82" begincolumn="21" endcolumn="26" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Monster" method="typeGenerator" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="82" endline="82" begincolumn="13" endcolumn="26" rule="CompareObjectsWithEquals" ruleset="Error Prone" class="Monster" method="typeGenerator" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="82" endline="82" begincolumn="13" endcolumn="26" rule="UseEqualsToCompareStrings" ruleset="Error Prone" class="Monster" method="typeGenerator" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="90" endline="90" begincolumn="26" endcolumn="32" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Monster" method="typeGenerator" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="90" endline="90" begincolumn="18" endcolumn="32" rule="CompareObjectsWithEquals" ruleset="Error Prone" class="Monster" method="typeGenerator" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="90" endline="90" begincolumn="18" endcolumn="32" rule="UseEqualsToCompareStrings" ruleset="Error Prone" class="Monster" method="typeGenerator" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="98" endline="98" begincolumn="26" endcolumn="32" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Monster" method="typeGenerator" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="98" endline="98" begincolumn="18" endcolumn="32" rule="CompareObjectsWithEquals" ruleset="Error Prone" class="Monster" method="typeGenerator" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="98" endline="98" begincolumn="18" endcolumn="32" rule="UseEqualsToCompareStrings" ruleset="Error Prone" class="Monster" method="typeGenerator" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="116" endline="116" begincolumn="36" endcolumn="53" rule="MethodReturnsInternalArray" ruleset="Best Practices" class="Monster" method="getWeakness" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#methodreturnsinternalarray" priority="3">
Returning 'weaknesses' may expose an internal array.
</violation>
<violation beginline="117" endline="117" begincolumn="36" endcolumn="51" rule="MethodReturnsInternalArray" ruleset="Best Practices" class="Monster" method="getStrength" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#methodreturnsinternalarray" priority="3">
Returning 'strength' may expose an internal array.
</violation>
</file>
<file name="C:\Users\Aleksey\Desktop\smirnova\src\main\java\Move.java">
<violation beginline="8" endline="33" begincolumn="1" endcolumn="1" rule="NoPackage" ruleset="Code Style" class="Move" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#nopackage" priority="3">
All classes, interfaces, enums and annotations must belong to a named package
</violation>
<violation beginline="8" endline="33" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" class="Move" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like Move
</violation>
</file>
<file name="C:\Users\Aleksey\Desktop\smirnova\src\main\java\Player.java">
<violation beginline="9" endline="110" begincolumn="1" endcolumn="1" rule="NoPackage" ruleset="Code Style" class="Player" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#nopackage" priority="3">
All classes, interfaces, enums and annotations must belong to a named package
</violation>
<violation beginline="10" endline="10" begincolumn="5" endcolumn="20" rule="CommentDefaultAccessModifier" ruleset="Code Style" class="Player" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the monster field if you want a default access modifier
</violation>
<violation beginline="57" endline="57" begincolumn="43" endcolumn="43" rule="ShortVariable" ruleset="Code Style" class="Player" method="attack" variable="m" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like m
</violation>
<violation beginline="60" endline="60" begincolumn="13" endcolumn="32" rule="LinguisticNaming" ruleset="Code Style" class="Player" method="attack" variable="isSuperEffective" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The variable 'isSuperEffective' indicates linguistically it is a boolean, but it is 'int'
</violation>
<violation beginline="62" endline="62" begincolumn="9" endcolumn="26" rule="SystemPrintln" ruleset="Best Practices" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="66" endline="66" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="77" endline="77" begincolumn="21" endcolumn="68" rule="CompareObjectsWithEquals" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="77" endline="77" begincolumn="21" endcolumn="68" rule="UseEqualsToCompareStrings" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="81" endline="81" begincolumn="21" endcolumn="68" rule="CompareObjectsWithEquals" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="81" endline="81" begincolumn="21" endcolumn="68" rule="UseEqualsToCompareStrings" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="91" endline="92" begincolumn="27" endcolumn="57" rule="UselessParentheses" ruleset="Code Style" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="96" endline="96" begincolumn="37" endcolumn="37" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="97" endline="97" begincolumn="17" endcolumn="34" rule="SystemPrintln" ruleset="Best Practices" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="99" endline="99" begincolumn="37" endcolumn="37" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="100" endline="100" begincolumn="17" endcolumn="34" rule="SystemPrintln" ruleset="Best Practices" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
<violation beginline="102" endline="102" begincolumn="13" endcolumn="30" rule="SystemPrintln" ruleset="Best Practices" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_bestpractices.html#systemprintln" priority="2">
System.out.println is used
</violation>
</file>
</pmd>
